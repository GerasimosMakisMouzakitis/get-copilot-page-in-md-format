name: Python Package CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install playwright
        playwright install chromium
    
    - name: Lint with flake8 (if available)
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 src/ --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
      continue-on-error: true
    
    - name: Test basic functionality
      run: |
        python src/get_copilot_page.py https://example.com -o test_output.md
        
    - name: Verify output file created
      run: |
        ls -la test_output.md
      shell: bash
    
    - name: Test with static site
      run: |
        python src/get_copilot_page.py https://httpbin.org/html -o test_static.md
      continue-on-error: true
    
    - name: Test error handling
      run: |
        python src/get_copilot_page.py invalid-url || echo "Error handling works as expected"
      shell: bash

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety
    
    - name: Check for security vulnerabilities
      run: |
        safety check -r requirements.txt --json
      continue-on-error: true
